//
//  BranchWorker.swift
//  Rooted
//
//  Created by Michael Westbrooks on 4/30/20.
//  Copyright (c) 2020 RedRooster Technologies Inc.. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import Branch

class BranchWorker {
  // Setup Branch
  let branch = Branch.getInstance()

  func initSession(_ completion: @escaping (Meeting?) -> Void) {
    // Validate integration
    // TODO: - Comment this out before sending to production
    // branch.validateSDKIntegration()
    branch.initSession(launchOptions: [:], automaticallyDisplayDeepLinkController: false) { (parameters, error) in
      if let err = error {
        RRLogger.logError(message: "Error with Branch", owner: self, error: err)
        completion(nil)
      } else {
        guard let params = parameters as? [String: AnyObject] else {
          RRLogger.logError(message: "Error with Branch SDK", owner: self, rError: RError.generalError)
          return completion(nil)
        }
        // Check if meeting string is part of params
        RRLogger.log(message: "Found paramas \(params.description)", owner: self)
        // Check if selected message contains the `Meeting` json string
        // If so, then the user selected a rooted message therefore show them the details of it
        guard
          let meetingJSONObject = params["$custom_meta_tags"] as? String, let meeting = Meeting(JSONString: meetingJSONObject) else {
            return completion(nil)
        }
        completion(meeting)
      }
    }
  }

  func customEvent(withName name: String) {
    BranchEvent.customEvent(withName: name)
  }
}
